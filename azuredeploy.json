{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "AKSresourceName": {
        "type": "string",
        "defaultValue": "AKS-KubeSphere",
        "metadata": {
            "description": "The name of AKS resource"
        }
    },
    "dnsPrefix": {
        "type": "string",
        "defaultValue": "AKS-KubeSphere-dns",
        "metadata": {
            "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
        }
    },
    "kubernetesVersion": {
        "type": "string",
        "allowedValues": [
            "1.17.13",
            "1.17.16",
            "1.18.10",
            "1.18.14",
            "1.19.6",
            "1.19.7",
	          "1.20.5"
        ],
        "defaultValue": "1.20.5",
        "metadata": {
            "description": "The version of Kubernetes."
        }
    },
    "AKSvmSize": {
      "type": "string",
      "metadata": {
        "description": "The size of the AKS VM to create"
      },
      "defaultValue": "Standard_F8s_v2"
    },
    "MasterNodeCount": {
        "type": "int",
        "defaultValue": 3,
        "allowedValues": [
            1,
            2,
            3,
            4,
            5
        ],
        "metadata": {
            "description": "The number of Master node."
        }
    },
    "WorkerNodeCount": {
        "type": "int",
        "defaultValue": 3,
        "allowedValues": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9
        ],
        "metadata": {
            "description": "The number of Worker node."
        }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "KS-client",
      "metadata": {
        "description": "Name of Virtual Machine."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "password",
        "sshPublicKey"
      ],
      "metadata": {
        "description": "Authentication type"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "sshPublicKey": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "ssh key for the Virtual Machine."
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "The size of the VM to create"
      },
      "defaultValue": "Standard_D2_V3"
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "https://aks-scripts.s3.us-west-2.amazonaws.com/"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    }

  },
  "variables": {
    "CloudName": "AzureChinaCloud",
    "dnsLabelPrefix": "[concat('msi',uniquestring(resourceGroup().id))]",
    "infraStorageAccountName": "[take(concat('storeinfra', uniquestring(resourceGroup().id), variables('dnsLabelPrefix')),24)]",
    "stateStorageAccountName": "[take(concat('storestate', uniquestring(resourceGroup().id), variables('dnsLabelPrefix')),24)]",
    "nicName": "[concat('nic', parameters('vmName'))]",
    "networkSecurityGroupName": "[concat('nsg', parameters('vmName'))]",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.0.0/24",
    "AKSSubnetName": "KubeSphereRG-vnet-aks",
    "AKSSubnetAddressRange": "10.0.128.0/20",
    "networkPlugin": "kubenet",
    "vmssNodePool": true,
    "networkPolicy": "calico",
    "publicIPAddressName": "[concat('pip',uniquestring(resourceGroup().id))]",
    "virtualNetworkName": "vnet",
    "enablePrivateCluster": false,
    "nodeResourceGroup": "[concat('aks-kubesphere-',uniqueString(resourceGroup().id))]",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
    "AKSDeploymentTemplateUrl": "[uri(parameters('_artifactsLocation'), concat('nested/aks.json', parameters('_artifactsLocationSasToken')))]",
    "KubeSphereInstallScriptUrl": "[uri(parameters('_artifactsLocation'),concat('scripts/deploykubesphere_v3.1.0.sh',parameters('_artifactsLocationSasToken')))]",
    "KubeSphereInstallScriptFileName": "deploykubesphere_v3.1.0.sh",
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('sshPublicKey')]"
          }
        ]
      }
    },
    "contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('infraStorageAccountName')]",
      "apiVersion": "2019-06-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('stateStorageAccountName')]",
      "apiVersion": "2019-06-01",
      "location": "[parameters('location')]",
      "resources": [
      ],
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "apiVersion": "2019-11-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion": "2019-11-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "dependsOn": ["[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('virtualNetworkName'),variables('subnetName'))]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('networkSecurityGroupName'))]"
              }
            }
          },
          {
            "name": "[variables('AKSSubnetName')]",
            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('virtualNetworkName'),variables('AKSSubnetName'))]",
            "properties": {
              "addressPrefix": "[variables('AKSSubnetAddressRange')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[variables('networkSecurityGroupName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-11-01",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-ssh",
            "properties": {
              "priority": 1000,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "22",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "default-allow-kubesphere",
            "properties": {
              "priority": 1100,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "80",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2019-11-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        }
      }
    },
    {
      "apiVersion": "2020-12-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
          "[resourceId('Microsoft.Network/networkinterfaces', variables('nicName'))]",
          "[resourceId('Microsoft.Resources/deployments', 'AKSDeployment')]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18.04-LTS",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(variables('infraStorageAccountName')).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "apiVersion": "2020-04-01-preview",
      "name": "[guid(resourceGroup().id, variables('contributor'))]",
      "type": "Microsoft.Authorization/roleAssignments",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
      ],
      "properties": {
        "roleDefinitionId": "[variables('contributor')]",
        "principalId": "[reference(parameters('vmName'), '2020-12-01', 'Full').identity.principalId]",
        "scope": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', resourceGroup().name)]",
        "principalType": "ServicePrincipal"
      }
    },
    {
        "name": "AKSDeployment",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2019-05-01",
        "dependsOn": [
            "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]"
        ],
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "uri": "[variables('AKSDeploymentTemplateUrl')]",
                "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "AKSresourceName": {
                    "value": "[parameters('AKSresourceName')]"
                },
                "location": {
                    "value": "[parameters('location')]"
                },
                "dnsPrefix": {
                    "value": "[parameters('dnsPrefix')]"
                },
                "vmSize": {
                    "value": "[parameters('AKSvmSize')]"
                },
                "kubernetesVersion": {
                    "value": "[parameters('kubernetesVersion')]"
                },
                "MasterNodeCount": {
                    "value": "[parameters('MasterNodeCount')]"
                },
                "WorkerNodeCount": {
                    "value": "[parameters('WorkerNodeCount')]"
                },
                "networkPlugin": {
                    "value": "[variables('networkPlugin')]"
                },
                "vmssNodePool": {
                    "value": "[variables('vmssNodePool')]"
                },
                "nodeResourceGroup": {
                  "value": "[variables('nodeResourceGroup')]"
                },
                "enablePrivateCluster": {
                    "value": "[variables('enablePrivateCluster')]"
                },
                "networkPolicy": {
                    "value": "[variables('networkPolicy')]"
                }
            }
        }
    },
    {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(parameters('vmName'),'/deploykubesphere')]",
        "apiVersion": "2020-06-01",
        "location": "[parameters('location')]",
        "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
            "[resourceId('Microsoft.Resources/deployments', 'AKSDeployment')]",
            "[resourceId('Microsoft.Authorization/roleAssignments',guid(resourceGroup().id, variables('contributor')))]"
        ],
        "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
                "fileUris": [
                    "[variables('KubeSphereInstallScriptUrl')]"
                ]
              },
            "protectedSettings": {
                              "commandToExecute": "[concat('bash ',variables('KubeSphereInstallScriptFileName'),' ',variables('CloudName'),' ',resourceGroup().name,' ',parameters('AKSresourceName'),' >>/tmp/deploy.log 2>&1')]"
            }
        }
    }
  ],
  "outputs": {
    "查看公共 IP 地址": {
      "type": "string",
      "value": "请在 Azure 门户中进入'资源组'，找到资源组中名为'aks-kubesphere-XXX'的资源组并进入'。 进入 'kubernetes' 负载均衡器，查看'负载均衡规则'中使用的'前端IP地址' "
    },
    "kubesphere登陆地址": {
      "type": "string",
      "value": "http://前端IP地址"
    },
    "默认管理员用户名": {
      "type": "string",
      "value": "admin"
    },
    "默认管理员用户名密码": {
      "type": "string",
      "value": "P@88w0rd"
    },
    "kubesphere 部署日志": {
      "type": "string",
      "value": "KubeSphere 部署日志请查看客户端节点 /tmp/deploy.log 文件"
    },
    "注意": {
      "type": "string",
      "value": "第一次登陆后请修改默认密码"
    }
  }
}
